[project]
name = "cookiecutter-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
license = "Apache-2.0"
dependencies = [
    "cookiecutter>=2.6.0",
]

[dependency-groups]
dev = [
    "commitizen>=3.30.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.43",
    "nox>=2024.10.09",
    "pre-commit>=4.0.1",
    "pyright>=1.1.352",
    "pytest>=8.3.3",
    "ruff>=0.7.2",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.pyright]
include = ["src"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "scripts",
]
defineConstant = { DEBUG = true }
venvPath = "."
venv = ".venv"

reportMissingImports = true
reportMissingTypeStubs = false
reportPrivateImportUsage = false

pythonVersion = "3.11"
pythonPlatform = "Linux"

[tool.z]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    "FBT003",
    # Allow boolean parameters in function definitions, like `def foo(bar=True)`
    "FBT002",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
    # Ignore single line string
    "ISC001"
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252", "ARG001"]
